/*******************************************************************/
/***************************** MIXINS ******************************/
/*******************************************************************/


/*** BUTTONS ***/

@mixin main-button {
  display: inline-block;
  text-align: center;
  @include font-size(22px);
  font-family: $body-font;
  background: transparent;
  color: #fff;
  border-radius: 30px;
  border: 2px solid #fff;
  padding: 5px 30px;
  @include transition($smooth);
  &:hover {
    @include transition($smooth);
    background: #000;
    border: 2px solid lighten(#000, 30%);
  }
}

@mixin alt-button {
  display: inline-block;
  text-align: center;
  @include font-size(22px);
  font-family: $body-font;
  background: $third;
  color: #fff;
  border-radius: 30px;
  border: 2px solid lighten($third, 10%);
  padding: 5px 30px;
  @include transition($smooth);
  &:hover {
    @include transition($smooth);
    background: $primary;
    border: 2px solid #fff;
  }
}



/*** ADD VENDOR PREFIXES TO MIXIN DECLARATIONS ***/

$VENDORS: webkit, moz, ms, o;

@mixin prefix($property, $values...) {
  @each $vendor in $VENDORS {
    -#{$vendor}-#{$property}: $values;
  }
  #{$property}: $values;
}

@mixin vendor-function($property, $func, $args...) {
  @each $vendor in $VENDORS {
    #{$property}: -#{$vendor}-#{$func}($args);
  }
  #{$property}: #{$func}($args);
}

/*** FONT FACE LOAD ***/

@each $font-face in font-1 {
  @font-face {
    font-family:"Marketing Script";
    src: url("../fonts/MarketingScript.woff") format("woff"),
    url("../fonts/MarketingScript.woff") format("woff"),
    url("../fonts/MarketingScript.ttf") format("truetype"),
    url("../fonts/MarketingScript.svg#MarketingScript") format("svg");
    font-weight: normal;
    font-style: normal;
  }
}

@mixin font($font, $style: normal, $weight: normal) {
  font-family: $font !important;
  font-style:  $style;
  font-weight: $weight;
}

/*** REM CONVERSION FOR PIXEL USAGE ***/

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}  
@mixin font-size($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}

/*** VERTICAL GRADIENTS ***/

@mixin linear-gradient($fromColor, $toColor) {
  background-color: $toColor; /* FALLBACK COLOR */
  background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(top, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

/*** HORIZONTAL GRADIENTS ***/

@mixin linear-gradient-horz($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -moz-linear-gradient(left,  $fromColor, $toColor); /* FF3.6+ */
  background-image: -webkit-gradient(linear, left top, right top, color-stop($fromColor), color-stop($toColor)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(left,  $fromColor, $toColor); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left,  $fromColor, $toColor); /* Opera 11.10+ */
  background: -ms-linear-gradient(left,  $fromColor, $toColor); /* IE10+ */
  background: linear-gradient(to right,  $fromColor, $toColor); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$fromColor', endColorstr='$toColor',GradientType=1 ); /* IE6-8 */
}

/*** GRADIENTS WITH A BACKGROUND IMAGE ***/

@mixin linear-gradient-image($image, $fromColor, $toColor) {
  background: $image, $toColor; /* Fallback Color */
  background: $image, -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background: $image, -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background:  $image, -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background:  $image, -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background:  $image, -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background:  $image, linear-gradient(top, $fromColor, $toColor);
}

/*** OTHER MIXINS ***/

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
@mixin box-shadow($shadow...) {
  @include prefix(box-shadow, $shadow);
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacityIE: $opacity * 100;
  filter: alpha(opacity=$opacityIE);
}
@mixin text-shadow($shadow...) {
  @include prefix(text-shadow, $shadow);
}
@mixin background-size($size) {
  @include prefix(background-size, $size);
}
@mixin box-sizing($box-sizing) {
  @include prefix(box-sizing, $box-sizing);
}

/*** TRANSFORM MIXINS ***/

@mixin transform($transforms) {
  @include prefix(transform, $transforms);
}
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}
@mixin scale($scale) {
  @include transform(scale($scale));
} 
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}
@mixin skew($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
@mixin transform-origin($origin) {
  moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}

/*** FILTER MIXIN ***/

@mixin filter($filter-type,$filter-amount) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}